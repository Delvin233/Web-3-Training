{
	"id": "662d35970f29b4ab201fe736092e9563",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"Cook_Web3/Beginner_Chef/bits and units/bits and units.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity >0.7.0 <=0.9.0;\r\n\r\n// this basically let us appreciate the smart in smart contracts\r\n// means that they are meant to be cost effective\r\n\r\ncontract bitsAndUnits{\r\n    // uint on default is uint256\r\n    // it has a minimum value of o\r\n    // has a maximum value of (2^256)-1\r\n\r\n    // the lower the index, the lower the cost\r\n    // its best to use the value you need for your project\r\n\r\n\r\n    // changing from one byte to another\r\n    uint32 n = 0x12548855;\r\n    uint16 b = uint16(n); // we lose higher order data from the left 0x8855\r\n\r\n    uint16 u = 0x645;\r\n    uint32 y = uint32(u); // we gain bytes from the left 0x0000645\r\n\r\n    // same applies to bytes\r\n    bytes2 ba = 0x1234;\r\n    // changing to bytes1 would remove up to 2 numbers (bytes), starting from the right\r\n    // in solidity language: we lose high order data\r\n    bytes1 a = bytes1(ba); // 0x12\r\n\r\n    // adding bytes\r\n    bytes3 g = 0x126446;\r\n    bytes4 h = bytes4(g); // 0x1264460000 this adds padding bits to the right\r\n\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"Cook_Web3/Beginner_Chef/bits and units/bits and units.sol": {
				"bitsAndUnits": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Cook_Web3/Beginner_Chef/bits and units/bits and units.sol\":187:1044  contract bitsAndUnits{... */\n  mstore(0x40, 0x80)\n    /* \"Cook_Web3/Beginner_Chef/bits and units/bits and units.sol\":494:504  0x12548855 */\n  0x12548855\n    /* \"Cook_Web3/Beginner_Chef/bits and units/bits and units.sol\":483:504  uint32 n = 0x12548855 */\n  0x00\n  dup1\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"Cook_Web3/Beginner_Chef/bits and units/bits and units.sol\":529:530  n */\n  0x00\n  dup1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffff\n  and\n    /* \"Cook_Web3/Beginner_Chef/bits and units/bits and units.sol\":511:531  uint16 b = uint16(n) */\n  0x00\n  exp(0x0100, 0x04)\n  dup2\n  sload\n  dup2\n  0xffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"Cook_Web3/Beginner_Chef/bits and units/bits and units.sol\":601:606  0x645 */\n  0x0645\n    /* \"Cook_Web3/Beginner_Chef/bits and units/bits and units.sol\":590:606  uint16 u = 0x645 */\n  0x00\n  exp(0x0100, 0x06)\n  dup2\n  sload\n  dup2\n  0xffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"Cook_Web3/Beginner_Chef/bits and units/bits and units.sol\":631:632  u */\n  0x00\n  0x06\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffff\n  and\n    /* \"Cook_Web3/Beginner_Chef/bits and units/bits and units.sol\":624:633  uint32(u) */\n  0xffff\n  and\n    /* \"Cook_Web3/Beginner_Chef/bits and units/bits and units.sol\":613:633  uint32 y = uint32(u) */\n  0x00\n  exp(0x0100, 0x08)\n  dup2\n  sload\n  dup2\n  0xffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"Cook_Web3/Beginner_Chef/bits and units/bits and units.sol\":725:731  0x1234 */\n  0x1234\n    /* \"Cook_Web3/Beginner_Chef/bits and units/bits and units.sol\":713:731  bytes2 ba = 0x1234 */\n  0xf0\n  shl\n  0x00\n  exp(0x0100, 0x0c)\n  dup2\n  sload\n  dup2\n  0xffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xf0\n  shr\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"Cook_Web3/Beginner_Chef/bits and units/bits and units.sol\":899:901  ba */\n  0x00\n  0x0c\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xf0\n  shl\n    /* \"Cook_Web3/Beginner_Chef/bits and units/bits and units.sol\":881:902  bytes1 a = bytes1(ba) */\n  0x00\n  exp(0x0100, 0x0e)\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xf8\n  shr\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"Cook_Web3/Beginner_Chef/bits and units/bits and units.sol\":951:959  0x126446 */\n  0x126446\n    /* \"Cook_Web3/Beginner_Chef/bits and units/bits and units.sol\":940:959  bytes3 g = 0x126446 */\n  0xe8\n  shl\n  0x00\n  exp(0x0100, 0x0f)\n  dup2\n  sload\n  dup2\n  0xffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xe8\n  shr\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"Cook_Web3/Beginner_Chef/bits and units/bits and units.sol\":984:985  g */\n  0x00\n  0x0f\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xe8\n  shl\n    /* \"Cook_Web3/Beginner_Chef/bits and units/bits and units.sol\":977:986  bytes4(g) */\n  not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n  and\n    /* \"Cook_Web3/Beginner_Chef/bits and units/bits and units.sol\":966:986  bytes4 h = bytes4(g) */\n  0x00\n  exp(0x0100, 0x12)\n  dup2\n  sload\n  dup2\n  0xffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xe0\n  shr\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"Cook_Web3/Beginner_Chef/bits and units/bits and units.sol\":187:1044  contract bitsAndUnits{... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Cook_Web3/Beginner_Chef/bits and units/bits and units.sol\":187:1044  contract bitsAndUnits{... */\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220dbee9947c6749878fb449febf66db53fc29a3c84805057f99a32e4de29e29e6364736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405263125488555f806101000a81548163ffffffff021916908363ffffffff1602179055505f8054906101000a900463ffffffff165f60046101000a81548161ffff021916908361ffff1602179055506106455f60066101000a81548161ffff021916908361ffff1602179055505f60069054906101000a900461ffff1661ffff165f60086101000a81548163ffffffff021916908363ffffffff16021790555061123460f01b5f600c6101000a81548161ffff021916908360f01c02179055505f600c9054906101000a900460f01b5f600e6101000a81548160ff021916908360f81c02179055506212644660e81b5f600f6101000a81548162ffffff021916908360e81c02179055505f600f9054906101000a900460e81b7cffffffffffffffffffffffffffffffffffffffffffffffffffffffffff19165f60126101000a81548163ffffffff021916908360e01c0217905550348015610163575f80fd5b50603e806101705f395ff3fe60806040525f80fdfea2646970667358221220dbee9947c6749878fb449febf66db53fc29a3c84805057f99a32e4de29e29e6364736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH4 0x12548855 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH0 PUSH1 0x4 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH2 0xFFFF MUL NOT AND SWAP1 DUP4 PUSH2 0xFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x645 PUSH0 PUSH1 0x6 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH2 0xFFFF MUL NOT AND SWAP1 DUP4 PUSH2 0xFFFF AND MUL OR SWAP1 SSTORE POP PUSH0 PUSH1 0x6 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH2 0xFFFF AND PUSH2 0xFFFF AND PUSH0 PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x1234 PUSH1 0xF0 SHL PUSH0 PUSH1 0xC PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH2 0xFFFF MUL NOT AND SWAP1 DUP4 PUSH1 0xF0 SHR MUL OR SWAP1 SSTORE POP PUSH0 PUSH1 0xC SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xF0 SHL PUSH0 PUSH1 0xE PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xF8 SHR MUL OR SWAP1 SSTORE POP PUSH3 0x126446 PUSH1 0xE8 SHL PUSH0 PUSH1 0xF PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH3 0xFFFFFF MUL NOT AND SWAP1 DUP4 PUSH1 0xE8 SHR MUL OR SWAP1 SSTORE POP PUSH0 PUSH1 0xF SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xE8 SHL PUSH29 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH0 PUSH1 0x12 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH1 0xE0 SHR MUL OR SWAP1 SSTORE POP CALLVALUE DUP1 ISZERO PUSH2 0x163 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x3E DUP1 PUSH2 0x170 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDB 0xEE SWAP10 SELFBALANCE 0xC6 PUSH21 0x9878FB449FEBF66DB53FC29A3C84805057F99A32E4 0xDE 0x29 0xE2 SWAP15 PUSH4 0x64736F6C PUSH4 0x4300081A STOP CALLER ",
							"sourceMap": "187:857:0:-:0;;;494:10;483:21;;;;;;;;;;;;;;;;;;;;529:1;;;;;;;;;;511:20;;;;;;;;;;;;;;;;;;;;601:5;590:16;;;;;;;;;;;;;;;;;;;;631:1;;;;;;;;;;;624:9;;613:20;;;;;;;;;;;;;;;;;;;;725:6;713:18;;;;;;;;;;;;;;;;;;;;;;899:2;;;;;;;;;;;881:21;;;;;;;;;;;;;;;;;;;;951:8;940:19;;;;;;;;;;;;;;;;;;;;;;984:1;;;;;;;;;;;977:9;;;966:20;;;;;;;;;;;;;;;;;;;;187:857;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "60806040525f80fdfea2646970667358221220dbee9947c6749878fb449febf66db53fc29a3c84805057f99a32e4de29e29e6364736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDB 0xEE SWAP10 SELFBALANCE 0xC6 PUSH21 0x9878FB449FEBF66DB53FC29A3C84805057F99A32E4 0xDE 0x29 0xE2 SWAP15 PUSH4 0x64736F6C PUSH4 0x4300081A STOP CALLER ",
							"sourceMap": "187:857:0:-:0;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "12400",
								"executionCost": "203256",
								"totalCost": "215656"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 187,
									"end": 1044,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 187,
									"end": 1044,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 187,
									"end": 1044,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 494,
									"end": 504,
									"name": "PUSH",
									"source": 0,
									"value": "12548855"
								},
								{
									"begin": 483,
									"end": 504,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 483,
									"end": 504,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 483,
									"end": 504,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 483,
									"end": 504,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 483,
									"end": 504,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 483,
									"end": 504,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 483,
									"end": 504,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 483,
									"end": 504,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFF"
								},
								{
									"begin": 483,
									"end": 504,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 483,
									"end": 504,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 483,
									"end": 504,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 483,
									"end": 504,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 483,
									"end": 504,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 483,
									"end": 504,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFF"
								},
								{
									"begin": 483,
									"end": 504,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 483,
									"end": 504,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 483,
									"end": 504,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 483,
									"end": 504,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 483,
									"end": 504,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 483,
									"end": 504,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 529,
									"end": 530,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 529,
									"end": 530,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 529,
									"end": 530,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 529,
									"end": 530,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 529,
									"end": 530,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 529,
									"end": 530,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 529,
									"end": 530,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 529,
									"end": 530,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 529,
									"end": 530,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFF"
								},
								{
									"begin": 529,
									"end": 530,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 511,
									"end": 531,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 511,
									"end": 531,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 511,
									"end": 531,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 511,
									"end": 531,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 511,
									"end": 531,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 511,
									"end": 531,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 511,
									"end": 531,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 511,
									"end": 531,
									"name": "PUSH",
									"source": 0,
									"value": "FFFF"
								},
								{
									"begin": 511,
									"end": 531,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 511,
									"end": 531,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 511,
									"end": 531,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 511,
									"end": 531,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 511,
									"end": 531,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 511,
									"end": 531,
									"name": "PUSH",
									"source": 0,
									"value": "FFFF"
								},
								{
									"begin": 511,
									"end": 531,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 511,
									"end": 531,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 511,
									"end": 531,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 511,
									"end": 531,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 511,
									"end": 531,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 511,
									"end": 531,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 601,
									"end": 606,
									"name": "PUSH",
									"source": 0,
									"value": "645"
								},
								{
									"begin": 590,
									"end": 606,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 590,
									"end": 606,
									"name": "PUSH",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 590,
									"end": 606,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 590,
									"end": 606,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 590,
									"end": 606,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 590,
									"end": 606,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 590,
									"end": 606,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 590,
									"end": 606,
									"name": "PUSH",
									"source": 0,
									"value": "FFFF"
								},
								{
									"begin": 590,
									"end": 606,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 590,
									"end": 606,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 590,
									"end": 606,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 590,
									"end": 606,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 590,
									"end": 606,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 590,
									"end": 606,
									"name": "PUSH",
									"source": 0,
									"value": "FFFF"
								},
								{
									"begin": 590,
									"end": 606,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 590,
									"end": 606,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 590,
									"end": 606,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 590,
									"end": 606,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 590,
									"end": 606,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 590,
									"end": 606,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 631,
									"end": 632,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 631,
									"end": 632,
									"name": "PUSH",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 631,
									"end": 632,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 631,
									"end": 632,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 631,
									"end": 632,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 631,
									"end": 632,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 631,
									"end": 632,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 631,
									"end": 632,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 631,
									"end": 632,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 631,
									"end": 632,
									"name": "PUSH",
									"source": 0,
									"value": "FFFF"
								},
								{
									"begin": 631,
									"end": 632,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 624,
									"end": 633,
									"name": "PUSH",
									"source": 0,
									"value": "FFFF"
								},
								{
									"begin": 624,
									"end": 633,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 613,
									"end": 633,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 613,
									"end": 633,
									"name": "PUSH",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 613,
									"end": 633,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 613,
									"end": 633,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 613,
									"end": 633,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 613,
									"end": 633,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 613,
									"end": 633,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 613,
									"end": 633,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFF"
								},
								{
									"begin": 613,
									"end": 633,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 613,
									"end": 633,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 613,
									"end": 633,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 613,
									"end": 633,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 613,
									"end": 633,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 613,
									"end": 633,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFF"
								},
								{
									"begin": 613,
									"end": 633,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 613,
									"end": 633,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 613,
									"end": 633,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 613,
									"end": 633,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 613,
									"end": 633,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 613,
									"end": 633,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 725,
									"end": 731,
									"name": "PUSH",
									"source": 0,
									"value": "1234"
								},
								{
									"begin": 713,
									"end": 731,
									"name": "PUSH",
									"source": 0,
									"value": "F0"
								},
								{
									"begin": 713,
									"end": 731,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 713,
									"end": 731,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 713,
									"end": 731,
									"name": "PUSH",
									"source": 0,
									"value": "C"
								},
								{
									"begin": 713,
									"end": 731,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 713,
									"end": 731,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 713,
									"end": 731,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 713,
									"end": 731,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 713,
									"end": 731,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 713,
									"end": 731,
									"name": "PUSH",
									"source": 0,
									"value": "FFFF"
								},
								{
									"begin": 713,
									"end": 731,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 713,
									"end": 731,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 713,
									"end": 731,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 713,
									"end": 731,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 713,
									"end": 731,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 713,
									"end": 731,
									"name": "PUSH",
									"source": 0,
									"value": "F0"
								},
								{
									"begin": 713,
									"end": 731,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 713,
									"end": 731,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 713,
									"end": 731,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 713,
									"end": 731,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 713,
									"end": 731,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 713,
									"end": 731,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 899,
									"end": 901,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 899,
									"end": 901,
									"name": "PUSH",
									"source": 0,
									"value": "C"
								},
								{
									"begin": 899,
									"end": 901,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 899,
									"end": 901,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 899,
									"end": 901,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 899,
									"end": 901,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 899,
									"end": 901,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 899,
									"end": 901,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 899,
									"end": 901,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 899,
									"end": 901,
									"name": "PUSH",
									"source": 0,
									"value": "F0"
								},
								{
									"begin": 899,
									"end": 901,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 881,
									"end": 902,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 881,
									"end": 902,
									"name": "PUSH",
									"source": 0,
									"value": "E"
								},
								{
									"begin": 881,
									"end": 902,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 881,
									"end": 902,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 881,
									"end": 902,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 881,
									"end": 902,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 881,
									"end": 902,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 881,
									"end": 902,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 881,
									"end": 902,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 881,
									"end": 902,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 881,
									"end": 902,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 881,
									"end": 902,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 881,
									"end": 902,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 881,
									"end": 902,
									"name": "PUSH",
									"source": 0,
									"value": "F8"
								},
								{
									"begin": 881,
									"end": 902,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 881,
									"end": 902,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 881,
									"end": 902,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 881,
									"end": 902,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 881,
									"end": 902,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 881,
									"end": 902,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 951,
									"end": 959,
									"name": "PUSH",
									"source": 0,
									"value": "126446"
								},
								{
									"begin": 940,
									"end": 959,
									"name": "PUSH",
									"source": 0,
									"value": "E8"
								},
								{
									"begin": 940,
									"end": 959,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 940,
									"end": 959,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 940,
									"end": 959,
									"name": "PUSH",
									"source": 0,
									"value": "F"
								},
								{
									"begin": 940,
									"end": 959,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 940,
									"end": 959,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 940,
									"end": 959,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 940,
									"end": 959,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 940,
									"end": 959,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 940,
									"end": 959,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFF"
								},
								{
									"begin": 940,
									"end": 959,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 940,
									"end": 959,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 940,
									"end": 959,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 940,
									"end": 959,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 940,
									"end": 959,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 940,
									"end": 959,
									"name": "PUSH",
									"source": 0,
									"value": "E8"
								},
								{
									"begin": 940,
									"end": 959,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 940,
									"end": 959,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 940,
									"end": 959,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 940,
									"end": 959,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 940,
									"end": 959,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 940,
									"end": 959,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 984,
									"end": 985,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 984,
									"end": 985,
									"name": "PUSH",
									"source": 0,
									"value": "F"
								},
								{
									"begin": 984,
									"end": 985,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 984,
									"end": 985,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 984,
									"end": 985,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 984,
									"end": 985,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 984,
									"end": 985,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 984,
									"end": 985,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 984,
									"end": 985,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 984,
									"end": 985,
									"name": "PUSH",
									"source": 0,
									"value": "E8"
								},
								{
									"begin": 984,
									"end": 985,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 977,
									"end": 986,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 977,
									"end": 986,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 977,
									"end": 986,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 966,
									"end": 986,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 966,
									"end": 986,
									"name": "PUSH",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 966,
									"end": 986,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 966,
									"end": 986,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 966,
									"end": 986,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 966,
									"end": 986,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 966,
									"end": 986,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 966,
									"end": 986,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFF"
								},
								{
									"begin": 966,
									"end": 986,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 966,
									"end": 986,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 966,
									"end": 986,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 966,
									"end": 986,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 966,
									"end": 986,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 966,
									"end": 986,
									"name": "PUSH",
									"source": 0,
									"value": "E0"
								},
								{
									"begin": 966,
									"end": 986,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 966,
									"end": 986,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 966,
									"end": 986,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 966,
									"end": 986,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 966,
									"end": 986,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 966,
									"end": 986,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 187,
									"end": 1044,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 187,
									"end": 1044,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 187,
									"end": 1044,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 187,
									"end": 1044,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 187,
									"end": 1044,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 187,
									"end": 1044,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 187,
									"end": 1044,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 187,
									"end": 1044,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 187,
									"end": 1044,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 187,
									"end": 1044,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 187,
									"end": 1044,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 187,
									"end": 1044,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 187,
									"end": 1044,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 187,
									"end": 1044,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 187,
									"end": 1044,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 187,
									"end": 1044,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 187,
									"end": 1044,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 187,
									"end": 1044,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220dbee9947c6749878fb449febf66db53fc29a3c84805057f99a32e4de29e29e6364736f6c634300081a0033",
									".code": [
										{
											"begin": 187,
											"end": 1044,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 187,
											"end": 1044,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 187,
											"end": 1044,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 187,
											"end": 1044,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 187,
											"end": 1044,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 187,
											"end": 1044,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"Cook_Web3/Beginner_Chef/bits and units/bits and units.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Cook_Web3/Beginner_Chef/bits and units/bits and units.sol\":\"bitsAndUnits\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Cook_Web3/Beginner_Chef/bits and units/bits and units.sol\":{\"keccak256\":\"0x0fc10c9d6d2b73622844ad7e181c4e27241c3d46b759def2d467f937f7e5e046\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9d81b026ddd67a4eb1a2fcf979327263bc9b20153d082824595f1900902eca62\",\"dweb:/ipfs/QmegK8WzdFMrVQjXXwsvTKRn6888CC9YEo4Yp9uiWgMHJS\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 4,
								"contract": "Cook_Web3/Beginner_Chef/bits and units/bits and units.sol:bitsAndUnits",
								"label": "n",
								"offset": 0,
								"slot": "0",
								"type": "t_uint32"
							},
							{
								"astId": 10,
								"contract": "Cook_Web3/Beginner_Chef/bits and units/bits and units.sol:bitsAndUnits",
								"label": "b",
								"offset": 4,
								"slot": "0",
								"type": "t_uint16"
							},
							{
								"astId": 13,
								"contract": "Cook_Web3/Beginner_Chef/bits and units/bits and units.sol:bitsAndUnits",
								"label": "u",
								"offset": 6,
								"slot": "0",
								"type": "t_uint16"
							},
							{
								"astId": 19,
								"contract": "Cook_Web3/Beginner_Chef/bits and units/bits and units.sol:bitsAndUnits",
								"label": "y",
								"offset": 8,
								"slot": "0",
								"type": "t_uint32"
							},
							{
								"astId": 22,
								"contract": "Cook_Web3/Beginner_Chef/bits and units/bits and units.sol:bitsAndUnits",
								"label": "ba",
								"offset": 12,
								"slot": "0",
								"type": "t_bytes2"
							},
							{
								"astId": 28,
								"contract": "Cook_Web3/Beginner_Chef/bits and units/bits and units.sol:bitsAndUnits",
								"label": "a",
								"offset": 14,
								"slot": "0",
								"type": "t_bytes1"
							},
							{
								"astId": 31,
								"contract": "Cook_Web3/Beginner_Chef/bits and units/bits and units.sol:bitsAndUnits",
								"label": "g",
								"offset": 15,
								"slot": "0",
								"type": "t_bytes3"
							},
							{
								"astId": 37,
								"contract": "Cook_Web3/Beginner_Chef/bits and units/bits and units.sol:bitsAndUnits",
								"label": "h",
								"offset": 18,
								"slot": "0",
								"type": "t_bytes4"
							}
						],
						"types": {
							"t_bytes1": {
								"encoding": "inplace",
								"label": "bytes1",
								"numberOfBytes": "1"
							},
							"t_bytes2": {
								"encoding": "inplace",
								"label": "bytes2",
								"numberOfBytes": "2"
							},
							"t_bytes3": {
								"encoding": "inplace",
								"label": "bytes3",
								"numberOfBytes": "3"
							},
							"t_bytes4": {
								"encoding": "inplace",
								"label": "bytes4",
								"numberOfBytes": "4"
							},
							"t_uint16": {
								"encoding": "inplace",
								"label": "uint16",
								"numberOfBytes": "2"
							},
							"t_uint32": {
								"encoding": "inplace",
								"label": "uint32",
								"numberOfBytes": "4"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"Cook_Web3/Beginner_Chef/bits and units/bits and units.sol": {
				"ast": {
					"absolutePath": "Cook_Web3/Beginner_Chef/bits and units/bits and units.sol",
					"exportedSymbols": {
						"bitsAndUnits": [
							38
						]
					},
					"id": 39,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">",
								"0.7",
								".0",
								"<=",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:31:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "bitsAndUnits",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 38,
							"linearizedBaseContracts": [
								38
							],
							"name": "bitsAndUnits",
							"nameLocation": "196:12:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 4,
									"mutability": "mutable",
									"name": "n",
									"nameLocation": "490:1:0",
									"nodeType": "VariableDeclaration",
									"scope": 38,
									"src": "483:21:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint32",
										"typeString": "uint32"
									},
									"typeName": {
										"id": 2,
										"name": "uint32",
										"nodeType": "ElementaryTypeName",
										"src": "483:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint32",
											"typeString": "uint32"
										}
									},
									"value": {
										"hexValue": "30783132353438383535",
										"id": 3,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "494:10:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_307529813_by_1",
											"typeString": "int_const 307529813"
										},
										"value": "0x12548855"
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 10,
									"mutability": "mutable",
									"name": "b",
									"nameLocation": "518:1:0",
									"nodeType": "VariableDeclaration",
									"scope": 38,
									"src": "511:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint16",
										"typeString": "uint16"
									},
									"typeName": {
										"id": 5,
										"name": "uint16",
										"nodeType": "ElementaryTypeName",
										"src": "511:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint16",
											"typeString": "uint16"
										}
									},
									"value": {
										"arguments": [
											{
												"id": 8,
												"name": "n",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 4,
												"src": "529:1:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												}
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												}
											],
											"id": 7,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "ElementaryTypeNameExpression",
											"src": "522:6:0",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_uint16_$",
												"typeString": "type(uint16)"
											},
											"typeName": {
												"id": 6,
												"name": "uint16",
												"nodeType": "ElementaryTypeName",
												"src": "522:6:0",
												"typeDescriptions": {}
											}
										},
										"id": 9,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "typeConversion",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "522:9:0",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_uint16",
											"typeString": "uint16"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 13,
									"mutability": "mutable",
									"name": "u",
									"nameLocation": "597:1:0",
									"nodeType": "VariableDeclaration",
									"scope": 38,
									"src": "590:16:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint16",
										"typeString": "uint16"
									},
									"typeName": {
										"id": 11,
										"name": "uint16",
										"nodeType": "ElementaryTypeName",
										"src": "590:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint16",
											"typeString": "uint16"
										}
									},
									"value": {
										"hexValue": "3078363435",
										"id": 12,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "601:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1605_by_1",
											"typeString": "int_const 1605"
										},
										"value": "0x645"
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 19,
									"mutability": "mutable",
									"name": "y",
									"nameLocation": "620:1:0",
									"nodeType": "VariableDeclaration",
									"scope": 38,
									"src": "613:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint32",
										"typeString": "uint32"
									},
									"typeName": {
										"id": 14,
										"name": "uint32",
										"nodeType": "ElementaryTypeName",
										"src": "613:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint32",
											"typeString": "uint32"
										}
									},
									"value": {
										"arguments": [
											{
												"id": 17,
												"name": "u",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 13,
												"src": "631:1:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												}
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												}
											],
											"id": 16,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "ElementaryTypeNameExpression",
											"src": "624:6:0",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_uint32_$",
												"typeString": "type(uint32)"
											},
											"typeName": {
												"id": 15,
												"name": "uint32",
												"nodeType": "ElementaryTypeName",
												"src": "624:6:0",
												"typeDescriptions": {}
											}
										},
										"id": 18,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "typeConversion",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "624:9:0",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_uint32",
											"typeString": "uint32"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 22,
									"mutability": "mutable",
									"name": "ba",
									"nameLocation": "720:2:0",
									"nodeType": "VariableDeclaration",
									"scope": 38,
									"src": "713:18:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes2",
										"typeString": "bytes2"
									},
									"typeName": {
										"id": 20,
										"name": "bytes2",
										"nodeType": "ElementaryTypeName",
										"src": "713:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes2",
											"typeString": "bytes2"
										}
									},
									"value": {
										"hexValue": "307831323334",
										"id": 21,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "725:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_4660_by_1",
											"typeString": "int_const 4660"
										},
										"value": "0x1234"
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 28,
									"mutability": "mutable",
									"name": "a",
									"nameLocation": "888:1:0",
									"nodeType": "VariableDeclaration",
									"scope": 38,
									"src": "881:21:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes1",
										"typeString": "bytes1"
									},
									"typeName": {
										"id": 23,
										"name": "bytes1",
										"nodeType": "ElementaryTypeName",
										"src": "881:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes1",
											"typeString": "bytes1"
										}
									},
									"value": {
										"arguments": [
											{
												"id": 26,
												"name": "ba",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 22,
												"src": "899:2:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes2",
													"typeString": "bytes2"
												}
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_bytes2",
													"typeString": "bytes2"
												}
											],
											"id": 25,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "ElementaryTypeNameExpression",
											"src": "892:6:0",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_bytes1_$",
												"typeString": "type(bytes1)"
											},
											"typeName": {
												"id": 24,
												"name": "bytes1",
												"nodeType": "ElementaryTypeName",
												"src": "892:6:0",
												"typeDescriptions": {}
											}
										},
										"id": 27,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "typeConversion",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "892:10:0",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes1",
											"typeString": "bytes1"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 31,
									"mutability": "mutable",
									"name": "g",
									"nameLocation": "947:1:0",
									"nodeType": "VariableDeclaration",
									"scope": 38,
									"src": "940:19:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes3",
										"typeString": "bytes3"
									},
									"typeName": {
										"id": 29,
										"name": "bytes3",
										"nodeType": "ElementaryTypeName",
										"src": "940:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes3",
											"typeString": "bytes3"
										}
									},
									"value": {
										"hexValue": "3078313236343436",
										"id": 30,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "951:8:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1205318_by_1",
											"typeString": "int_const 1205318"
										},
										"value": "0x126446"
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 37,
									"mutability": "mutable",
									"name": "h",
									"nameLocation": "973:1:0",
									"nodeType": "VariableDeclaration",
									"scope": 38,
									"src": "966:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes4",
										"typeString": "bytes4"
									},
									"typeName": {
										"id": 32,
										"name": "bytes4",
										"nodeType": "ElementaryTypeName",
										"src": "966:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes4",
											"typeString": "bytes4"
										}
									},
									"value": {
										"arguments": [
											{
												"id": 35,
												"name": "g",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 31,
												"src": "984:1:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes3",
													"typeString": "bytes3"
												}
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_bytes3",
													"typeString": "bytes3"
												}
											],
											"id": 34,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "ElementaryTypeNameExpression",
											"src": "977:6:0",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_bytes4_$",
												"typeString": "type(bytes4)"
											},
											"typeName": {
												"id": 33,
												"name": "bytes4",
												"nodeType": "ElementaryTypeName",
												"src": "977:6:0",
												"typeDescriptions": {}
											}
										},
										"id": 36,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "typeConversion",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "977:9:0",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes4",
											"typeString": "bytes4"
										}
									},
									"visibility": "internal"
								}
							],
							"scope": 39,
							"src": "187:857:0",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "33:1011:0"
				},
				"id": 0
			}
		}
	}
}